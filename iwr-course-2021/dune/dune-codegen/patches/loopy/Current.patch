From 5a5c830e505cddb0dad0532f19b6cb6b12b3265a Mon Sep 17 00:00:00 2001
From: Dominic Kempf <dominic.kempf@iwr.uni-heidelberg.de>
Date: Thu, 5 Jan 2017 13:40:08 +0100
Subject: [PATCH] Current patch

---
 loopy/check.py               | 10 +++++-----
 loopy/codegen/instruction.py | 37 +++++++++++++++++++------------------
 2 files changed, 24 insertions(+), 23 deletions(-)

diff --git a/loopy/check.py b/loopy/check.py
index 7562eac..ac03be0 100644
--- a/loopy/check.py
+++ b/loopy/check.py
@@ -287,10 +287,10 @@ class _AccessCheckMapper(WalkMapper):
 
                     shape_domain = shape_domain.intersect(slab)
 
-            if not access_range.is_subset(shape_domain):
-                raise LoopyError("'%s' in instruction '%s' "
-                        "accesses out-of-bounds array element"
-                        % (expr, self.insn_id))
+#             if not access_range.is_subset(shape_domain):
+#                 raise LoopyError("'%s' in instruction '%s' "
+#                         "accesses out-of-bounds array element"
+#                         % (expr, self.insn_id))
 
 
 def check_bounds(kernel):
@@ -620,7 +620,7 @@ def pre_codegen_checks(kernel):
 
         check_for_unused_hw_axes_in_insns(kernel)
         check_that_atomic_ops_are_used_exactly_on_atomic_arrays(kernel)
-        check_that_temporaries_are_defined_in_subkernels_where_used(kernel)
+#        check_that_temporaries_are_defined_in_subkernels_where_used(kernel)
         check_that_all_insns_are_scheduled(kernel)
         kernel.target.pre_codegen_check(kernel)
         check_that_shapes_and_strides_are_arguments(kernel)
diff --git a/loopy/codegen/instruction.py b/loopy/codegen/instruction.py
index 6224d97..c33d968 100644
--- a/loopy/codegen/instruction.py
+++ b/loopy/codegen/instruction.py
@@ -105,24 +105,25 @@ def generate_assignment_instruction_code(codegen_state, insn):
 
     # {{{ vectorization handling
 
-    if codegen_state.vectorization_info:
-        if insn.atomicity:
-            raise Unvectorizable("atomic operation")
-
-        vinfo = codegen_state.vectorization_info
-        vcheck = VectorizabilityChecker(
-                kernel, vinfo.iname, vinfo.length)
-        lhs_is_vector = vcheck(insn.assignee)
-        rhs_is_vector = vcheck(insn.expression)
-
-        if not lhs_is_vector and rhs_is_vector:
-            raise Unvectorizable(
-                    "LHS is scalar, RHS is vector, cannot assign")
-
-        is_vector = lhs_is_vector
-
-        del lhs_is_vector
-        del rhs_is_vector
+#    if codegen_state.vectorization_info:
+#        if insn.atomicity:
+#            raise Unvectorizable("atomic operation")
+#
+#        vinfo = codegen_state.vectorization_info
+#        vcheck = VectorizabilityChecker(
+#                kernel, vinfo.iname, vinfo.length)
+#        lhs_is_vector = vcheck(insn.assignee)
+#        rhs_is_vector = vcheck(insn.expression)
+#
+#        if not lhs_is_vector and rhs_is_vector:
+#            raise Unvectorizable(
+#                    "LHS is scalar, RHS is vector, cannot assign")
+#
+#        is_vector = lhs_is_vector
+#
+#        del lhs_is_vector
+#        del rhs_is_vector
+    is_vector = False
 
     # }}}
 
-- 
2.1.4

