# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.20

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /opt/homebrew/Cellar/cmake/3.20.4/bin/cmake

# The command to remove a file.
RM = /opt/homebrew/Cellar/cmake/3.20.4/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/dune/dune-alugrid

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/opt/homebrew/Cellar/cmake/3.20.4/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/opt/homebrew/Cellar/cmake/3.20.4/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/opt/homebrew/Cellar/cmake/3.20.4/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/opt/homebrew/Cellar/cmake/3.20.4/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/opt/homebrew/Cellar/cmake/3.20.4/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/opt/homebrew/Cellar/cmake/3.20.4/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target test
test:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running tests..."
	/opt/homebrew/Cellar/cmake/3.20.4/bin/ctest --force-new-ctest-process $(ARGS)
.PHONY : test

# Special rule for the target test
test/fast: test
.PHONY : test/fast

# Special rule for the target package
package: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Run CPack packaging tool..."
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && /opt/homebrew/Cellar/cmake/3.20.4/bin/cpack --config ./CPackConfig.cmake
.PHONY : package

# Special rule for the target package
package/fast: package
.PHONY : package/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/opt/homebrew/Cellar/cmake/3.20.4/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/opt/homebrew/Cellar/cmake/3.20.4/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target package_source
package_source:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Run CPack packaging tool for source..."
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && /opt/homebrew/Cellar/cmake/3.20.4/bin/cpack --config ./CPackSourceConfig.cmake /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid/CPackSourceConfig.cmake
.PHONY : package_source

# Special rule for the target package_source
package_source/fast: package_source
.PHONY : package_source/fast

# The main all target
all: cmake_check_build_system
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(CMAKE_COMMAND) -E cmake_progress_start /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid/CMakeFiles /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid/lib//CMakeFiles/progress.marks
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lib/all
	$(CMAKE_COMMAND) -E cmake_progress_start /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lib/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lib/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lib/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
lib/CMakeFiles/dunealugrid.dir/rule:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lib/CMakeFiles/dunealugrid.dir/rule
.PHONY : lib/CMakeFiles/dunealugrid.dir/rule

# Convenience name for target.
dunealugrid: lib/CMakeFiles/dunealugrid.dir/rule
.PHONY : dunealugrid

# fast build rule for target.
dunealugrid/fast:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/build
.PHONY : dunealugrid/fast

__/dune/alugrid/3d/faceutility.o: __/dune/alugrid/3d/faceutility.cc.o
.PHONY : __/dune/alugrid/3d/faceutility.o

# target to build an object file
__/dune/alugrid/3d/faceutility.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/3d/faceutility.cc.o
.PHONY : __/dune/alugrid/3d/faceutility.cc.o

__/dune/alugrid/3d/faceutility.i: __/dune/alugrid/3d/faceutility.cc.i
.PHONY : __/dune/alugrid/3d/faceutility.i

# target to preprocess a source file
__/dune/alugrid/3d/faceutility.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/3d/faceutility.cc.i
.PHONY : __/dune/alugrid/3d/faceutility.cc.i

__/dune/alugrid/3d/faceutility.s: __/dune/alugrid/3d/faceutility.cc.s
.PHONY : __/dune/alugrid/3d/faceutility.s

# target to generate assembly for a file
__/dune/alugrid/3d/faceutility.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/3d/faceutility.cc.s
.PHONY : __/dune/alugrid/3d/faceutility.cc.s

__/dune/alugrid/3d/mappings.o: __/dune/alugrid/3d/mappings.cc.o
.PHONY : __/dune/alugrid/3d/mappings.o

# target to build an object file
__/dune/alugrid/3d/mappings.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/3d/mappings.cc.o
.PHONY : __/dune/alugrid/3d/mappings.cc.o

__/dune/alugrid/3d/mappings.i: __/dune/alugrid/3d/mappings.cc.i
.PHONY : __/dune/alugrid/3d/mappings.i

# target to preprocess a source file
__/dune/alugrid/3d/mappings.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/3d/mappings.cc.i
.PHONY : __/dune/alugrid/3d/mappings.cc.i

__/dune/alugrid/3d/mappings.s: __/dune/alugrid/3d/mappings.cc.s
.PHONY : __/dune/alugrid/3d/mappings.s

# target to generate assembly for a file
__/dune/alugrid/3d/mappings.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/3d/mappings.cc.s
.PHONY : __/dune/alugrid/3d/mappings.cc.s

__/dune/alugrid/3d/topology.o: __/dune/alugrid/3d/topology.cc.o
.PHONY : __/dune/alugrid/3d/topology.o

# target to build an object file
__/dune/alugrid/3d/topology.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/3d/topology.cc.o
.PHONY : __/dune/alugrid/3d/topology.cc.o

__/dune/alugrid/3d/topology.i: __/dune/alugrid/3d/topology.cc.i
.PHONY : __/dune/alugrid/3d/topology.i

# target to preprocess a source file
__/dune/alugrid/3d/topology.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/3d/topology.cc.i
.PHONY : __/dune/alugrid/3d/topology.cc.i

__/dune/alugrid/3d/topology.s: __/dune/alugrid/3d/topology.cc.s
.PHONY : __/dune/alugrid/3d/topology.s

# target to generate assembly for a file
__/dune/alugrid/3d/topology.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/3d/topology.cc.s
.PHONY : __/dune/alugrid/3d/topology.cc.s

__/dune/alugrid/impl/binaryio.o: __/dune/alugrid/impl/binaryio.cc.o
.PHONY : __/dune/alugrid/impl/binaryio.o

# target to build an object file
__/dune/alugrid/impl/binaryio.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/binaryio.cc.o
.PHONY : __/dune/alugrid/impl/binaryio.cc.o

__/dune/alugrid/impl/binaryio.i: __/dune/alugrid/impl/binaryio.cc.i
.PHONY : __/dune/alugrid/impl/binaryio.i

# target to preprocess a source file
__/dune/alugrid/impl/binaryio.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/binaryio.cc.i
.PHONY : __/dune/alugrid/impl/binaryio.cc.i

__/dune/alugrid/impl/binaryio.s: __/dune/alugrid/impl/binaryio.cc.s
.PHONY : __/dune/alugrid/impl/binaryio.s

# target to generate assembly for a file
__/dune/alugrid/impl/binaryio.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/binaryio.cc.s
.PHONY : __/dune/alugrid/impl/binaryio.cc.s

__/dune/alugrid/impl/duneinterface/gitter_dune_impl.o: __/dune/alugrid/impl/duneinterface/gitter_dune_impl.cc.o
.PHONY : __/dune/alugrid/impl/duneinterface/gitter_dune_impl.o

# target to build an object file
__/dune/alugrid/impl/duneinterface/gitter_dune_impl.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/duneinterface/gitter_dune_impl.cc.o
.PHONY : __/dune/alugrid/impl/duneinterface/gitter_dune_impl.cc.o

__/dune/alugrid/impl/duneinterface/gitter_dune_impl.i: __/dune/alugrid/impl/duneinterface/gitter_dune_impl.cc.i
.PHONY : __/dune/alugrid/impl/duneinterface/gitter_dune_impl.i

# target to preprocess a source file
__/dune/alugrid/impl/duneinterface/gitter_dune_impl.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/duneinterface/gitter_dune_impl.cc.i
.PHONY : __/dune/alugrid/impl/duneinterface/gitter_dune_impl.cc.i

__/dune/alugrid/impl/duneinterface/gitter_dune_impl.s: __/dune/alugrid/impl/duneinterface/gitter_dune_impl.cc.s
.PHONY : __/dune/alugrid/impl/duneinterface/gitter_dune_impl.s

# target to generate assembly for a file
__/dune/alugrid/impl/duneinterface/gitter_dune_impl.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/duneinterface/gitter_dune_impl.cc.s
.PHONY : __/dune/alugrid/impl/duneinterface/gitter_dune_impl.cc.s

__/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.o: __/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.cc.o
.PHONY : __/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.o

# target to build an object file
__/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.cc.o
.PHONY : __/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.cc.o

__/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.i: __/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.cc.i
.PHONY : __/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.i

# target to preprocess a source file
__/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.cc.i
.PHONY : __/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.cc.i

__/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.s: __/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.cc.s
.PHONY : __/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.s

# target to generate assembly for a file
__/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.cc.s
.PHONY : __/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.cc.s

__/dune/alugrid/impl/macrofileheader.o: __/dune/alugrid/impl/macrofileheader.cc.o
.PHONY : __/dune/alugrid/impl/macrofileheader.o

# target to build an object file
__/dune/alugrid/impl/macrofileheader.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/macrofileheader.cc.o
.PHONY : __/dune/alugrid/impl/macrofileheader.cc.o

__/dune/alugrid/impl/macrofileheader.i: __/dune/alugrid/impl/macrofileheader.cc.i
.PHONY : __/dune/alugrid/impl/macrofileheader.i

# target to preprocess a source file
__/dune/alugrid/impl/macrofileheader.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/macrofileheader.cc.i
.PHONY : __/dune/alugrid/impl/macrofileheader.cc.i

__/dune/alugrid/impl/macrofileheader.s: __/dune/alugrid/impl/macrofileheader.cc.s
.PHONY : __/dune/alugrid/impl/macrofileheader.s

# target to generate assembly for a file
__/dune/alugrid/impl/macrofileheader.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/macrofileheader.cc.s
.PHONY : __/dune/alugrid/impl/macrofileheader.cc.s

__/dune/alugrid/impl/parallel/gitter_hexa_top_pll.o: __/dune/alugrid/impl/parallel/gitter_hexa_top_pll.cc.o
.PHONY : __/dune/alugrid/impl/parallel/gitter_hexa_top_pll.o

# target to build an object file
__/dune/alugrid/impl/parallel/gitter_hexa_top_pll.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_hexa_top_pll.cc.o
.PHONY : __/dune/alugrid/impl/parallel/gitter_hexa_top_pll.cc.o

__/dune/alugrid/impl/parallel/gitter_hexa_top_pll.i: __/dune/alugrid/impl/parallel/gitter_hexa_top_pll.cc.i
.PHONY : __/dune/alugrid/impl/parallel/gitter_hexa_top_pll.i

# target to preprocess a source file
__/dune/alugrid/impl/parallel/gitter_hexa_top_pll.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_hexa_top_pll.cc.i
.PHONY : __/dune/alugrid/impl/parallel/gitter_hexa_top_pll.cc.i

__/dune/alugrid/impl/parallel/gitter_hexa_top_pll.s: __/dune/alugrid/impl/parallel/gitter_hexa_top_pll.cc.s
.PHONY : __/dune/alugrid/impl/parallel/gitter_hexa_top_pll.s

# target to generate assembly for a file
__/dune/alugrid/impl/parallel/gitter_hexa_top_pll.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_hexa_top_pll.cc.s
.PHONY : __/dune/alugrid/impl/parallel/gitter_hexa_top_pll.cc.s

__/dune/alugrid/impl/parallel/gitter_pll_idn.o: __/dune/alugrid/impl/parallel/gitter_pll_idn.cc.o
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_idn.o

# target to build an object file
__/dune/alugrid/impl/parallel/gitter_pll_idn.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_pll_idn.cc.o
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_idn.cc.o

__/dune/alugrid/impl/parallel/gitter_pll_idn.i: __/dune/alugrid/impl/parallel/gitter_pll_idn.cc.i
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_idn.i

# target to preprocess a source file
__/dune/alugrid/impl/parallel/gitter_pll_idn.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_pll_idn.cc.i
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_idn.cc.i

__/dune/alugrid/impl/parallel/gitter_pll_idn.s: __/dune/alugrid/impl/parallel/gitter_pll_idn.cc.s
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_idn.s

# target to generate assembly for a file
__/dune/alugrid/impl/parallel/gitter_pll_idn.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_pll_idn.cc.s
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_idn.cc.s

__/dune/alugrid/impl/parallel/gitter_pll_impl.o: __/dune/alugrid/impl/parallel/gitter_pll_impl.cc.o
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_impl.o

# target to build an object file
__/dune/alugrid/impl/parallel/gitter_pll_impl.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_pll_impl.cc.o
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_impl.cc.o

__/dune/alugrid/impl/parallel/gitter_pll_impl.i: __/dune/alugrid/impl/parallel/gitter_pll_impl.cc.i
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_impl.i

# target to preprocess a source file
__/dune/alugrid/impl/parallel/gitter_pll_impl.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_pll_impl.cc.i
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_impl.cc.i

__/dune/alugrid/impl/parallel/gitter_pll_impl.s: __/dune/alugrid/impl/parallel/gitter_pll_impl.cc.s
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_impl.s

# target to generate assembly for a file
__/dune/alugrid/impl/parallel/gitter_pll_impl.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_pll_impl.cc.s
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_impl.cc.s

__/dune/alugrid/impl/parallel/gitter_pll_ldb.o: __/dune/alugrid/impl/parallel/gitter_pll_ldb.cc.o
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_ldb.o

# target to build an object file
__/dune/alugrid/impl/parallel/gitter_pll_ldb.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_pll_ldb.cc.o
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_ldb.cc.o

__/dune/alugrid/impl/parallel/gitter_pll_ldb.i: __/dune/alugrid/impl/parallel/gitter_pll_ldb.cc.i
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_ldb.i

# target to preprocess a source file
__/dune/alugrid/impl/parallel/gitter_pll_ldb.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_pll_ldb.cc.i
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_ldb.cc.i

__/dune/alugrid/impl/parallel/gitter_pll_ldb.s: __/dune/alugrid/impl/parallel/gitter_pll_ldb.cc.s
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_ldb.s

# target to generate assembly for a file
__/dune/alugrid/impl/parallel/gitter_pll_ldb.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_pll_ldb.cc.s
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_ldb.cc.s

__/dune/alugrid/impl/parallel/gitter_pll_mgb.o: __/dune/alugrid/impl/parallel/gitter_pll_mgb.cc.o
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_mgb.o

# target to build an object file
__/dune/alugrid/impl/parallel/gitter_pll_mgb.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_pll_mgb.cc.o
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_mgb.cc.o

__/dune/alugrid/impl/parallel/gitter_pll_mgb.i: __/dune/alugrid/impl/parallel/gitter_pll_mgb.cc.i
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_mgb.i

# target to preprocess a source file
__/dune/alugrid/impl/parallel/gitter_pll_mgb.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_pll_mgb.cc.i
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_mgb.cc.i

__/dune/alugrid/impl/parallel/gitter_pll_mgb.s: __/dune/alugrid/impl/parallel/gitter_pll_mgb.cc.s
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_mgb.s

# target to generate assembly for a file
__/dune/alugrid/impl/parallel/gitter_pll_mgb.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_pll_mgb.cc.s
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_mgb.cc.s

__/dune/alugrid/impl/parallel/gitter_pll_sti.o: __/dune/alugrid/impl/parallel/gitter_pll_sti.cc.o
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_sti.o

# target to build an object file
__/dune/alugrid/impl/parallel/gitter_pll_sti.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_pll_sti.cc.o
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_sti.cc.o

__/dune/alugrid/impl/parallel/gitter_pll_sti.i: __/dune/alugrid/impl/parallel/gitter_pll_sti.cc.i
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_sti.i

# target to preprocess a source file
__/dune/alugrid/impl/parallel/gitter_pll_sti.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_pll_sti.cc.i
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_sti.cc.i

__/dune/alugrid/impl/parallel/gitter_pll_sti.s: __/dune/alugrid/impl/parallel/gitter_pll_sti.cc.s
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_sti.s

# target to generate assembly for a file
__/dune/alugrid/impl/parallel/gitter_pll_sti.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_pll_sti.cc.s
.PHONY : __/dune/alugrid/impl/parallel/gitter_pll_sti.cc.s

__/dune/alugrid/impl/parallel/gitter_tetra_top_pll.o: __/dune/alugrid/impl/parallel/gitter_tetra_top_pll.cc.o
.PHONY : __/dune/alugrid/impl/parallel/gitter_tetra_top_pll.o

# target to build an object file
__/dune/alugrid/impl/parallel/gitter_tetra_top_pll.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_tetra_top_pll.cc.o
.PHONY : __/dune/alugrid/impl/parallel/gitter_tetra_top_pll.cc.o

__/dune/alugrid/impl/parallel/gitter_tetra_top_pll.i: __/dune/alugrid/impl/parallel/gitter_tetra_top_pll.cc.i
.PHONY : __/dune/alugrid/impl/parallel/gitter_tetra_top_pll.i

# target to preprocess a source file
__/dune/alugrid/impl/parallel/gitter_tetra_top_pll.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_tetra_top_pll.cc.i
.PHONY : __/dune/alugrid/impl/parallel/gitter_tetra_top_pll.cc.i

__/dune/alugrid/impl/parallel/gitter_tetra_top_pll.s: __/dune/alugrid/impl/parallel/gitter_tetra_top_pll.cc.s
.PHONY : __/dune/alugrid/impl/parallel/gitter_tetra_top_pll.s

# target to generate assembly for a file
__/dune/alugrid/impl/parallel/gitter_tetra_top_pll.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/gitter_tetra_top_pll.cc.s
.PHONY : __/dune/alugrid/impl/parallel/gitter_tetra_top_pll.cc.s

__/dune/alugrid/impl/parallel/mpAccess.o: __/dune/alugrid/impl/parallel/mpAccess.cc.o
.PHONY : __/dune/alugrid/impl/parallel/mpAccess.o

# target to build an object file
__/dune/alugrid/impl/parallel/mpAccess.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/mpAccess.cc.o
.PHONY : __/dune/alugrid/impl/parallel/mpAccess.cc.o

__/dune/alugrid/impl/parallel/mpAccess.i: __/dune/alugrid/impl/parallel/mpAccess.cc.i
.PHONY : __/dune/alugrid/impl/parallel/mpAccess.i

# target to preprocess a source file
__/dune/alugrid/impl/parallel/mpAccess.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/mpAccess.cc.i
.PHONY : __/dune/alugrid/impl/parallel/mpAccess.cc.i

__/dune/alugrid/impl/parallel/mpAccess.s: __/dune/alugrid/impl/parallel/mpAccess.cc.s
.PHONY : __/dune/alugrid/impl/parallel/mpAccess.s

# target to generate assembly for a file
__/dune/alugrid/impl/parallel/mpAccess.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/parallel/mpAccess.cc.s
.PHONY : __/dune/alugrid/impl/parallel/mpAccess.cc.s

__/dune/alugrid/impl/serial/ghost_elements.o: __/dune/alugrid/impl/serial/ghost_elements.cc.o
.PHONY : __/dune/alugrid/impl/serial/ghost_elements.o

# target to build an object file
__/dune/alugrid/impl/serial/ghost_elements.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/ghost_elements.cc.o
.PHONY : __/dune/alugrid/impl/serial/ghost_elements.cc.o

__/dune/alugrid/impl/serial/ghost_elements.i: __/dune/alugrid/impl/serial/ghost_elements.cc.i
.PHONY : __/dune/alugrid/impl/serial/ghost_elements.i

# target to preprocess a source file
__/dune/alugrid/impl/serial/ghost_elements.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/ghost_elements.cc.i
.PHONY : __/dune/alugrid/impl/serial/ghost_elements.cc.i

__/dune/alugrid/impl/serial/ghost_elements.s: __/dune/alugrid/impl/serial/ghost_elements.cc.s
.PHONY : __/dune/alugrid/impl/serial/ghost_elements.s

# target to generate assembly for a file
__/dune/alugrid/impl/serial/ghost_elements.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/ghost_elements.cc.s
.PHONY : __/dune/alugrid/impl/serial/ghost_elements.cc.s

__/dune/alugrid/impl/serial/ghost_info.o: __/dune/alugrid/impl/serial/ghost_info.cc.o
.PHONY : __/dune/alugrid/impl/serial/ghost_info.o

# target to build an object file
__/dune/alugrid/impl/serial/ghost_info.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/ghost_info.cc.o
.PHONY : __/dune/alugrid/impl/serial/ghost_info.cc.o

__/dune/alugrid/impl/serial/ghost_info.i: __/dune/alugrid/impl/serial/ghost_info.cc.i
.PHONY : __/dune/alugrid/impl/serial/ghost_info.i

# target to preprocess a source file
__/dune/alugrid/impl/serial/ghost_info.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/ghost_info.cc.i
.PHONY : __/dune/alugrid/impl/serial/ghost_info.cc.i

__/dune/alugrid/impl/serial/ghost_info.s: __/dune/alugrid/impl/serial/ghost_info.cc.s
.PHONY : __/dune/alugrid/impl/serial/ghost_info.s

# target to generate assembly for a file
__/dune/alugrid/impl/serial/ghost_info.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/ghost_info.cc.s
.PHONY : __/dune/alugrid/impl/serial/ghost_info.cc.s

__/dune/alugrid/impl/serial/gitter_geo.o: __/dune/alugrid/impl/serial/gitter_geo.cc.o
.PHONY : __/dune/alugrid/impl/serial/gitter_geo.o

# target to build an object file
__/dune/alugrid/impl/serial/gitter_geo.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/gitter_geo.cc.o
.PHONY : __/dune/alugrid/impl/serial/gitter_geo.cc.o

__/dune/alugrid/impl/serial/gitter_geo.i: __/dune/alugrid/impl/serial/gitter_geo.cc.i
.PHONY : __/dune/alugrid/impl/serial/gitter_geo.i

# target to preprocess a source file
__/dune/alugrid/impl/serial/gitter_geo.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/gitter_geo.cc.i
.PHONY : __/dune/alugrid/impl/serial/gitter_geo.cc.i

__/dune/alugrid/impl/serial/gitter_geo.s: __/dune/alugrid/impl/serial/gitter_geo.cc.s
.PHONY : __/dune/alugrid/impl/serial/gitter_geo.s

# target to generate assembly for a file
__/dune/alugrid/impl/serial/gitter_geo.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/gitter_geo.cc.s
.PHONY : __/dune/alugrid/impl/serial/gitter_geo.cc.s

__/dune/alugrid/impl/serial/gitter_hexa_top.o: __/dune/alugrid/impl/serial/gitter_hexa_top.cc.o
.PHONY : __/dune/alugrid/impl/serial/gitter_hexa_top.o

# target to build an object file
__/dune/alugrid/impl/serial/gitter_hexa_top.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/gitter_hexa_top.cc.o
.PHONY : __/dune/alugrid/impl/serial/gitter_hexa_top.cc.o

__/dune/alugrid/impl/serial/gitter_hexa_top.i: __/dune/alugrid/impl/serial/gitter_hexa_top.cc.i
.PHONY : __/dune/alugrid/impl/serial/gitter_hexa_top.i

# target to preprocess a source file
__/dune/alugrid/impl/serial/gitter_hexa_top.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/gitter_hexa_top.cc.i
.PHONY : __/dune/alugrid/impl/serial/gitter_hexa_top.cc.i

__/dune/alugrid/impl/serial/gitter_hexa_top.s: __/dune/alugrid/impl/serial/gitter_hexa_top.cc.s
.PHONY : __/dune/alugrid/impl/serial/gitter_hexa_top.s

# target to generate assembly for a file
__/dune/alugrid/impl/serial/gitter_hexa_top.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/gitter_hexa_top.cc.s
.PHONY : __/dune/alugrid/impl/serial/gitter_hexa_top.cc.s

__/dune/alugrid/impl/serial/gitter_impl.o: __/dune/alugrid/impl/serial/gitter_impl.cc.o
.PHONY : __/dune/alugrid/impl/serial/gitter_impl.o

# target to build an object file
__/dune/alugrid/impl/serial/gitter_impl.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/gitter_impl.cc.o
.PHONY : __/dune/alugrid/impl/serial/gitter_impl.cc.o

__/dune/alugrid/impl/serial/gitter_impl.i: __/dune/alugrid/impl/serial/gitter_impl.cc.i
.PHONY : __/dune/alugrid/impl/serial/gitter_impl.i

# target to preprocess a source file
__/dune/alugrid/impl/serial/gitter_impl.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/gitter_impl.cc.i
.PHONY : __/dune/alugrid/impl/serial/gitter_impl.cc.i

__/dune/alugrid/impl/serial/gitter_impl.s: __/dune/alugrid/impl/serial/gitter_impl.cc.s
.PHONY : __/dune/alugrid/impl/serial/gitter_impl.s

# target to generate assembly for a file
__/dune/alugrid/impl/serial/gitter_impl.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/gitter_impl.cc.s
.PHONY : __/dune/alugrid/impl/serial/gitter_impl.cc.s

__/dune/alugrid/impl/serial/gitter_mgb.o: __/dune/alugrid/impl/serial/gitter_mgb.cc.o
.PHONY : __/dune/alugrid/impl/serial/gitter_mgb.o

# target to build an object file
__/dune/alugrid/impl/serial/gitter_mgb.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/gitter_mgb.cc.o
.PHONY : __/dune/alugrid/impl/serial/gitter_mgb.cc.o

__/dune/alugrid/impl/serial/gitter_mgb.i: __/dune/alugrid/impl/serial/gitter_mgb.cc.i
.PHONY : __/dune/alugrid/impl/serial/gitter_mgb.i

# target to preprocess a source file
__/dune/alugrid/impl/serial/gitter_mgb.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/gitter_mgb.cc.i
.PHONY : __/dune/alugrid/impl/serial/gitter_mgb.cc.i

__/dune/alugrid/impl/serial/gitter_mgb.s: __/dune/alugrid/impl/serial/gitter_mgb.cc.s
.PHONY : __/dune/alugrid/impl/serial/gitter_mgb.s

# target to generate assembly for a file
__/dune/alugrid/impl/serial/gitter_mgb.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/gitter_mgb.cc.s
.PHONY : __/dune/alugrid/impl/serial/gitter_mgb.cc.s

__/dune/alugrid/impl/serial/gitter_sti.o: __/dune/alugrid/impl/serial/gitter_sti.cc.o
.PHONY : __/dune/alugrid/impl/serial/gitter_sti.o

# target to build an object file
__/dune/alugrid/impl/serial/gitter_sti.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/gitter_sti.cc.o
.PHONY : __/dune/alugrid/impl/serial/gitter_sti.cc.o

__/dune/alugrid/impl/serial/gitter_sti.i: __/dune/alugrid/impl/serial/gitter_sti.cc.i
.PHONY : __/dune/alugrid/impl/serial/gitter_sti.i

# target to preprocess a source file
__/dune/alugrid/impl/serial/gitter_sti.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/gitter_sti.cc.i
.PHONY : __/dune/alugrid/impl/serial/gitter_sti.cc.i

__/dune/alugrid/impl/serial/gitter_sti.s: __/dune/alugrid/impl/serial/gitter_sti.cc.s
.PHONY : __/dune/alugrid/impl/serial/gitter_sti.s

# target to generate assembly for a file
__/dune/alugrid/impl/serial/gitter_sti.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/gitter_sti.cc.s
.PHONY : __/dune/alugrid/impl/serial/gitter_sti.cc.s

__/dune/alugrid/impl/serial/gitter_tetra_top.o: __/dune/alugrid/impl/serial/gitter_tetra_top.cc.o
.PHONY : __/dune/alugrid/impl/serial/gitter_tetra_top.o

# target to build an object file
__/dune/alugrid/impl/serial/gitter_tetra_top.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/gitter_tetra_top.cc.o
.PHONY : __/dune/alugrid/impl/serial/gitter_tetra_top.cc.o

__/dune/alugrid/impl/serial/gitter_tetra_top.i: __/dune/alugrid/impl/serial/gitter_tetra_top.cc.i
.PHONY : __/dune/alugrid/impl/serial/gitter_tetra_top.i

# target to preprocess a source file
__/dune/alugrid/impl/serial/gitter_tetra_top.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/gitter_tetra_top.cc.i
.PHONY : __/dune/alugrid/impl/serial/gitter_tetra_top.cc.i

__/dune/alugrid/impl/serial/gitter_tetra_top.s: __/dune/alugrid/impl/serial/gitter_tetra_top.cc.s
.PHONY : __/dune/alugrid/impl/serial/gitter_tetra_top.s

# target to generate assembly for a file
__/dune/alugrid/impl/serial/gitter_tetra_top.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/gitter_tetra_top.cc.s
.PHONY : __/dune/alugrid/impl/serial/gitter_tetra_top.cc.s

__/dune/alugrid/impl/serial/mapp_cube_3d.o: __/dune/alugrid/impl/serial/mapp_cube_3d.cc.o
.PHONY : __/dune/alugrid/impl/serial/mapp_cube_3d.o

# target to build an object file
__/dune/alugrid/impl/serial/mapp_cube_3d.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/mapp_cube_3d.cc.o
.PHONY : __/dune/alugrid/impl/serial/mapp_cube_3d.cc.o

__/dune/alugrid/impl/serial/mapp_cube_3d.i: __/dune/alugrid/impl/serial/mapp_cube_3d.cc.i
.PHONY : __/dune/alugrid/impl/serial/mapp_cube_3d.i

# target to preprocess a source file
__/dune/alugrid/impl/serial/mapp_cube_3d.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/mapp_cube_3d.cc.i
.PHONY : __/dune/alugrid/impl/serial/mapp_cube_3d.cc.i

__/dune/alugrid/impl/serial/mapp_cube_3d.s: __/dune/alugrid/impl/serial/mapp_cube_3d.cc.s
.PHONY : __/dune/alugrid/impl/serial/mapp_cube_3d.s

# target to generate assembly for a file
__/dune/alugrid/impl/serial/mapp_cube_3d.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/mapp_cube_3d.cc.s
.PHONY : __/dune/alugrid/impl/serial/mapp_cube_3d.cc.s

__/dune/alugrid/impl/serial/mapp_tetra_3d.o: __/dune/alugrid/impl/serial/mapp_tetra_3d.cc.o
.PHONY : __/dune/alugrid/impl/serial/mapp_tetra_3d.o

# target to build an object file
__/dune/alugrid/impl/serial/mapp_tetra_3d.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/mapp_tetra_3d.cc.o
.PHONY : __/dune/alugrid/impl/serial/mapp_tetra_3d.cc.o

__/dune/alugrid/impl/serial/mapp_tetra_3d.i: __/dune/alugrid/impl/serial/mapp_tetra_3d.cc.i
.PHONY : __/dune/alugrid/impl/serial/mapp_tetra_3d.i

# target to preprocess a source file
__/dune/alugrid/impl/serial/mapp_tetra_3d.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/mapp_tetra_3d.cc.i
.PHONY : __/dune/alugrid/impl/serial/mapp_tetra_3d.cc.i

__/dune/alugrid/impl/serial/mapp_tetra_3d.s: __/dune/alugrid/impl/serial/mapp_tetra_3d.cc.s
.PHONY : __/dune/alugrid/impl/serial/mapp_tetra_3d.s

# target to generate assembly for a file
__/dune/alugrid/impl/serial/mapp_tetra_3d.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/mapp_tetra_3d.cc.s
.PHONY : __/dune/alugrid/impl/serial/mapp_tetra_3d.cc.s

__/dune/alugrid/impl/serial/myalloc.o: __/dune/alugrid/impl/serial/myalloc.cc.o
.PHONY : __/dune/alugrid/impl/serial/myalloc.o

# target to build an object file
__/dune/alugrid/impl/serial/myalloc.cc.o:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/myalloc.cc.o
.PHONY : __/dune/alugrid/impl/serial/myalloc.cc.o

__/dune/alugrid/impl/serial/myalloc.i: __/dune/alugrid/impl/serial/myalloc.cc.i
.PHONY : __/dune/alugrid/impl/serial/myalloc.i

# target to preprocess a source file
__/dune/alugrid/impl/serial/myalloc.cc.i:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/myalloc.cc.i
.PHONY : __/dune/alugrid/impl/serial/myalloc.cc.i

__/dune/alugrid/impl/serial/myalloc.s: __/dune/alugrid/impl/serial/myalloc.cc.s
.PHONY : __/dune/alugrid/impl/serial/myalloc.s

# target to generate assembly for a file
__/dune/alugrid/impl/serial/myalloc.cc.s:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(MAKE) $(MAKESILENT) -f lib/CMakeFiles/dunealugrid.dir/build.make lib/CMakeFiles/dunealugrid.dir/__/dune/alugrid/impl/serial/myalloc.cc.s
.PHONY : __/dune/alugrid/impl/serial/myalloc.cc.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... package"
	@echo "... package_source"
	@echo "... rebuild_cache"
	@echo "... test"
	@echo "... dunealugrid"
	@echo "... __/dune/alugrid/3d/faceutility.o"
	@echo "... __/dune/alugrid/3d/faceutility.i"
	@echo "... __/dune/alugrid/3d/faceutility.s"
	@echo "... __/dune/alugrid/3d/mappings.o"
	@echo "... __/dune/alugrid/3d/mappings.i"
	@echo "... __/dune/alugrid/3d/mappings.s"
	@echo "... __/dune/alugrid/3d/topology.o"
	@echo "... __/dune/alugrid/3d/topology.i"
	@echo "... __/dune/alugrid/3d/topology.s"
	@echo "... __/dune/alugrid/impl/binaryio.o"
	@echo "... __/dune/alugrid/impl/binaryio.i"
	@echo "... __/dune/alugrid/impl/binaryio.s"
	@echo "... __/dune/alugrid/impl/duneinterface/gitter_dune_impl.o"
	@echo "... __/dune/alugrid/impl/duneinterface/gitter_dune_impl.i"
	@echo "... __/dune/alugrid/impl/duneinterface/gitter_dune_impl.s"
	@echo "... __/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.o"
	@echo "... __/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.i"
	@echo "... __/dune/alugrid/impl/duneinterface/gitter_dune_pll_impl.s"
	@echo "... __/dune/alugrid/impl/macrofileheader.o"
	@echo "... __/dune/alugrid/impl/macrofileheader.i"
	@echo "... __/dune/alugrid/impl/macrofileheader.s"
	@echo "... __/dune/alugrid/impl/parallel/gitter_hexa_top_pll.o"
	@echo "... __/dune/alugrid/impl/parallel/gitter_hexa_top_pll.i"
	@echo "... __/dune/alugrid/impl/parallel/gitter_hexa_top_pll.s"
	@echo "... __/dune/alugrid/impl/parallel/gitter_pll_idn.o"
	@echo "... __/dune/alugrid/impl/parallel/gitter_pll_idn.i"
	@echo "... __/dune/alugrid/impl/parallel/gitter_pll_idn.s"
	@echo "... __/dune/alugrid/impl/parallel/gitter_pll_impl.o"
	@echo "... __/dune/alugrid/impl/parallel/gitter_pll_impl.i"
	@echo "... __/dune/alugrid/impl/parallel/gitter_pll_impl.s"
	@echo "... __/dune/alugrid/impl/parallel/gitter_pll_ldb.o"
	@echo "... __/dune/alugrid/impl/parallel/gitter_pll_ldb.i"
	@echo "... __/dune/alugrid/impl/parallel/gitter_pll_ldb.s"
	@echo "... __/dune/alugrid/impl/parallel/gitter_pll_mgb.o"
	@echo "... __/dune/alugrid/impl/parallel/gitter_pll_mgb.i"
	@echo "... __/dune/alugrid/impl/parallel/gitter_pll_mgb.s"
	@echo "... __/dune/alugrid/impl/parallel/gitter_pll_sti.o"
	@echo "... __/dune/alugrid/impl/parallel/gitter_pll_sti.i"
	@echo "... __/dune/alugrid/impl/parallel/gitter_pll_sti.s"
	@echo "... __/dune/alugrid/impl/parallel/gitter_tetra_top_pll.o"
	@echo "... __/dune/alugrid/impl/parallel/gitter_tetra_top_pll.i"
	@echo "... __/dune/alugrid/impl/parallel/gitter_tetra_top_pll.s"
	@echo "... __/dune/alugrid/impl/parallel/mpAccess.o"
	@echo "... __/dune/alugrid/impl/parallel/mpAccess.i"
	@echo "... __/dune/alugrid/impl/parallel/mpAccess.s"
	@echo "... __/dune/alugrid/impl/serial/ghost_elements.o"
	@echo "... __/dune/alugrid/impl/serial/ghost_elements.i"
	@echo "... __/dune/alugrid/impl/serial/ghost_elements.s"
	@echo "... __/dune/alugrid/impl/serial/ghost_info.o"
	@echo "... __/dune/alugrid/impl/serial/ghost_info.i"
	@echo "... __/dune/alugrid/impl/serial/ghost_info.s"
	@echo "... __/dune/alugrid/impl/serial/gitter_geo.o"
	@echo "... __/dune/alugrid/impl/serial/gitter_geo.i"
	@echo "... __/dune/alugrid/impl/serial/gitter_geo.s"
	@echo "... __/dune/alugrid/impl/serial/gitter_hexa_top.o"
	@echo "... __/dune/alugrid/impl/serial/gitter_hexa_top.i"
	@echo "... __/dune/alugrid/impl/serial/gitter_hexa_top.s"
	@echo "... __/dune/alugrid/impl/serial/gitter_impl.o"
	@echo "... __/dune/alugrid/impl/serial/gitter_impl.i"
	@echo "... __/dune/alugrid/impl/serial/gitter_impl.s"
	@echo "... __/dune/alugrid/impl/serial/gitter_mgb.o"
	@echo "... __/dune/alugrid/impl/serial/gitter_mgb.i"
	@echo "... __/dune/alugrid/impl/serial/gitter_mgb.s"
	@echo "... __/dune/alugrid/impl/serial/gitter_sti.o"
	@echo "... __/dune/alugrid/impl/serial/gitter_sti.i"
	@echo "... __/dune/alugrid/impl/serial/gitter_sti.s"
	@echo "... __/dune/alugrid/impl/serial/gitter_tetra_top.o"
	@echo "... __/dune/alugrid/impl/serial/gitter_tetra_top.i"
	@echo "... __/dune/alugrid/impl/serial/gitter_tetra_top.s"
	@echo "... __/dune/alugrid/impl/serial/mapp_cube_3d.o"
	@echo "... __/dune/alugrid/impl/serial/mapp_cube_3d.i"
	@echo "... __/dune/alugrid/impl/serial/mapp_cube_3d.s"
	@echo "... __/dune/alugrid/impl/serial/mapp_tetra_3d.o"
	@echo "... __/dune/alugrid/impl/serial/mapp_tetra_3d.i"
	@echo "... __/dune/alugrid/impl/serial/mapp_tetra_3d.s"
	@echo "... __/dune/alugrid/impl/serial/myalloc.o"
	@echo "... __/dune/alugrid/impl/serial/myalloc.i"
	@echo "... __/dune/alugrid/impl/serial/myalloc.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /Users/wjq/Documents/Github-CI/deal.II-mini/temp/iwr-course-2021/release-build/dune-alugrid && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

