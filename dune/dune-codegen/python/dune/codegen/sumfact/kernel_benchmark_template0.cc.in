// Transformations:
${CODEGEN_TRANSFORMATIONS}

#include "config.h"
#include <iostream>
#include <fstream>
#include <random>
#include "benchmark/benchmark.h"
#include <dune/codegen/common/vectorclass.hh>
#include <dune/codegen/sumfact/horizontaladd.hh>

${CODEGEN_DECLARE_GLOBAL_ARGUMENTS}

${CODEGEN_BENCHMARK_FUNCTION}

static void BM_sumfact_kernel(benchmark::State& state){
  std::uniform_real_distribution<double> unif(0,1);
  std::uniform_int_distribution<int> unif_int(0,1);
  std::default_random_engine re;

  ${CODEGEN_DECLARE_GLOBAL_ARGUMENTS}
  ${CODEGEN_INITIALIZE_GLOBAL_ARGUMENTS}

  ${CODEGEN_DECLARE_INPUT}
  ${CODEGEN_INITIALIZE_INPUT}

  ${CODEGEN_DECLARE_ARGUMENTS}
  ${CODEGEN_INITIALIZE_ARGUMENTS}

  for (auto _ : state){
    ${CODEGEN_CALL_BENCHMARK_FUNCTION}
  }
}

${CODEGEN_BENCHMARK}

BENCHMARK_MAIN();
